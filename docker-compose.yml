version: '3'
services:
  frontend:
    build:
      context: ./FrontDeploy
      dockerfile: Dockerfile
    env_file:
      - ./FrontDeploy/.env
    networks:
      - app-network

  backend:
    build:
      context: ./Deploy
      dockerfile: Dockerfile
    env_file:
      - ./Deploy/.env
    networks:
      - app-network

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    depends_on:
      - frontend
      - backend
    networks:
      - app-network

networks:
  app-network:
    driver: bridge


# Commenting out the MongoDB service since you're using MongoDB Atlas
#   mongo:
#     image: mongo
#     ports:
#       - "27017:27017"
#     volumes:
#       - mongo-data:/data/db

# Define a volume for MongoDB data storage (commented out since not used)
# volumes:
#   mongo-data:


# version: '3'
# services:
#   frontend:
#     build:
#       context: ./FrontDeploy
#       dockerfile: Dockerfile
#     ports:
#       - "5000:5000"
#     environment:
#       - VITE_API_Server=${VITE_API_Server}
#       - VITE_API_Deployed=${VITE_API_Deployed}
#     env_file:
#       - ./FrontDeploy/.env

#   backend:
#     build:
#       context: ./Deploy
#       dockerfile: Dockerfile
#     ports:
#       - "9000:9000"
#     environment:
#       - PORT=${PORT}
#       - CORS_ORIGIN=${CORS_ORIGIN}
#       - MONGODB_URI=${MONGODB_URI}
#       - CLOUDINARY_CLOUD_NAME=${CLOUDINARY_CLOUD_NAME}
#       - CLOUDINARY_API_KEY=${CLOUDINARY_API_KEY}
#       - CLOUDINARY_API_SECRET=${CLOUDINARY_API_SECRET}
#       - ACCESS_TOKEN_SECRET=${ACCESS_TOKEN_SECRET}
#       - ACCESS_TOKEN_EXPIRY=${ACCESS_TOKEN_EXPIRY}
#       - REFRESH_TOKEN_SECRET=${REFRESH_TOKEN_SECRET}
#       - REFRESH_TOKEN_EXPIRY=${REFRESH_TOKEN_EXPIRY}
#       - NODE_ENV=${NODE_ENV}
#     env_file:
#       - ./Deploy/.env

#   mongo:
#     image: mongo
#     ports:
#       - "27017:27017"
#     volumes:
#       - mongo-data:/data/db

# volumes:
#   mongo-data:
