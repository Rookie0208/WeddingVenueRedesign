name: Deploy to VPS with branch

on:
  workflow_dispatch:
    inputs:
      branch_name:
        description: "Branch to test"
        required: true
        default: "main"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: ðŸ›’ Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch_name }}  # Dynamic branch name

      - name: List repository contents
        run: |
          echo "Listing repository contents..."
          ls -R

      - name: Check FrontDeploy directory existence
        run: |
          if [ ! -d "./FrontDeploy" ]; then
            echo "FrontDeploy directory does not exist."
            exit 1
          else
            echo "FrontDeploy directory exists."
          fi

      - name: Check Deploy directory existence
        run: |
          if [ ! -d "./Deploy" ]; then
            echo "Deploy directory does not exist."
            exit 1
          else
            echo "Deploy directory exists."
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: ðŸ”‘ Log in to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_HUB_TOKEN_DEMO }}" | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin

      - name: Build Docker Image
        run: |
          docker buildx build --load -t ${{ secrets.DOCKER_HUB_USERNAME }}/mern-frontend:latest -f FrontDeploy/Dockerfile FrontDeploy
          docker buildx build --load -t ${{ secrets.DOCKER_HUB_USERNAME }}/mern-backend:latest -f Deploy/Dockerfile Deploy

      - name: Push Image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/mern-frontend:latest
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/mern-backend:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Ensure Docker is installed on VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_PRIVATE_KEY }}
          script: |
            sudo apt-get update
            sudo apt-get install -y docker.io
            sudo curl -L "https://github.com/docker/compose/releases/download/v2.12.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
            sudo systemctl start docker
            sudo systemctl enable docker
            sudo usermod -aG docker $USER
            newgrp docker
            docker --version
            docker-compose --version

      - name: Copy docker-compose.yml to VPS
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_PRIVATE_KEY }}
          source: "docker-compose.yml"
          target: "/home/root/"

      - name: Copy FrontDeploy directory to VPS
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_PRIVATE_KEY }}
          source: "FrontDeploy"
          target: "/home/root/"

      - name: Copy Deploy directory to VPS
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_PRIVATE_KEY }}
          source: "Deploy"
          target: "/home/${{ secrets.VPS_USERNAME }}/"

      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_PRIVATE_KEY }}
          script: |
            echo "docker version"
            docker --version
            echo "docker-compose version"
            docker-compose --version
            cd /home/${{ secrets.VPS_USERNAME }}/
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/mern-frontend:latest
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/mern-backend:latest
            docker-compose down
            docker-compose up -d
